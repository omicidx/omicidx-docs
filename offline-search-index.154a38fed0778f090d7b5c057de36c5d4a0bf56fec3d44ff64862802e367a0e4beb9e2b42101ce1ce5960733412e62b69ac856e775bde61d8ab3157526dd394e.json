[{"body":"This is a test.\n","excerpt":"This is a test.","ref":"/omicidx-docs/docs/open-web-api/web-api-overview/","title":"What is a web API?"},{"body":"Bigquery is a cloud service run by Google. To begin using Bigquery, you need to establish an account. In this section, we will be ensuring that you have some form of access to Bigquery.\nSet up access  If you do not have a Google Cloud Platform account, move to No existing GCP account If you have a Google Cloud Platform account, skip to Existing GCP account or project  No existing GCP account If you do not have such an account, you can get started using the GCP free trial.\nAfter creating a new account, there are two options to get going, using the free Bigquery sandbox (that is subject to some quotas and limitd) or creating a GCP project, allowing you to use credits or charge to your account.\nThe BigQuery sandbox is available to anyone with a Google Cloud Platform account. It gives free access to the power of BigQuery subject to the sandbox’s limits. The sandbox allows use of the web UI in the Cloud Console without providing a credit card. Use the sandbox without creating a billing account or enabling billing for your project.\nThe web UI is the graphical interface used to create and manage BigQuery resources and to run SQL queries.\n Open the sandbox. Accept the terms of service. Before you can use the BigQuery sandbox, you must create a project. Follow the prompts to create your new project. After you create your project, the BigQuery web UI will display a sandbox banner like the following.  While using the sandbox, there is no need to create a billing account (i.e., no need to supply a credit card), and you do not need to attach a billing account to the project.\nExisting GCP account or project If you have a Google Cloud Platform billing account already, you can choose to either create a new project and use it or choose an existing project. Unlike the Bigquery sandbox, using a project with billing attached means that 1) the account will accrue charges and 2) usage will not be subject to the Sandbox limits.\nAccess the OmicIDX Bigquery Dataset Navigate to the Bigquery dataset on Google Cloud Platform.\nThe Bigquery console is an online portal that allows basic queries and data exploration of BigQuery datasets. Upon opening the OmicIDX BigQuery link, the console should open with the OmicIDX dataset already available in the dataset window.\nThe OmicIDX dataset appears in the left “dataset” window.   “Notice” After clicking on the OmicIDX dataset in the navigation window, “pinning” the OmicIDX dataset will keep it available when you come back to Bigquery. You can always click the link above again if you forget.  \nClicking the “pin” button on the right will keep the OmicIDX dataset in your dataset navigator for easy access. Next steps At this point, you should have access to Bigquery and the OmicIDX dataset. In the next section, we will explore using the web UI to explore the OmicIDX dataset.\n","excerpt":"Bigquery is a cloud service run by Google. To begin using Bigquery, you need to establish an …","ref":"/omicidx-docs/docs/bigquery/setup/","title":"Getting set up to use OmicIDX"},{"body":"Access and use the web service The web API is language-agnostic. Access from the command line using curl or httpie or using web clients available in nearly all programming languages. Results are returned in JSON format.\nThe API endpoint is at:\n https://api.omicidx.cancerdatasci.org/  Three versions of API documentation, based on the OpenAPI (v3) description of the web service.\n RapiDoc [Interactive] Swagger [Interactive] ReDoc [Static]  All present the same information, so choice is personal preference.\nInterrogate the Bigquery data warehouse Bigquery is ideal for performing data exploration, for integrating with other public or private datasets, or for performing ad hoc queries or analyses. Since Bigquery uses SQL, complex queries are possible and since Bigquery is cloud-scale, analytic queries are quite fast (usually just a few seconds, even over 10+ million records).\nBigquery requires a Google Cloud Project for billing purposes. Usage is based on amount of data processed per query. While the data in OmicIDX are largish, they are small for Bigquery, so costs will generally be low.\nTo access the Bigquery dataset online through the Bigquery cloud portal, navigate to the Bigquery OmicIDX dataset.\nAs with the web API, Bigquery clients exist for command line as well as for many programming languages.\n","excerpt":"Access and use the web service The web API is language-agnostic. Access from the command line using …","ref":"/omicidx-docs/docs/getting-started/","title":"For the impatient..."},{"body":"Prerequisites  Using Google Cloud Bigquery requires a Google Cloud project. Knowledge of basic SQL syntax, while not required, will be beneficial. Several primers of the SQL language are available online  Objectives This section is intended to provide working knowledge of:\n The general content of OmicIDX dataset in Google Cloud Bigquery Bigquery Cloud Console usage and components Basic SQL queries of OmicIDX datasets Location of Bigquery documentation, including client libraries for programmatic access The OmicIDX relational data model How to save the results of an OmicIDX query for external downstream analysis  Outcomes After working through this section, OmicIDX users will be able to:\n Access preloaded OmicIDX data in Google Cloud Bigquery Use the Google Cloud Bigquery Console to view OmicIDX data Perform basic SQL queries of OmicIDX datasets Locate Bigquery documentation Describe the cost model and approaches to estimate and minimize costs Export query results for further analysis  ","excerpt":"Prerequisites  Using Google Cloud Bigquery requires a Google Cloud project. Knowledge of basic SQL …","ref":"/omicidx-docs/docs/bigquery/","title":"Bigquery Data Warehouse"},{"body":"","excerpt":"","ref":"/omicidx-docs/docs/open-web-api/","title":"The OmicIDX Web API"},{"body":"What makes Bigquery what it is?   Bigquery most closely resembles a [relational database management system]. Roughly speaking, the data in Bigquery are stored as records where each record can be thought of as a set of values for a number of pre-defined columns. An individual column can contain complex or nested data.\n  Bigquery is a cloud-based. Cloud-based implies that the system is supported and maintained by someone else, in this case, Google. In addition, the Bigquery system scales automatically and transparently and can adjust to workloads of nearly arbitrary size. From our point-of-view, Google provides us with a database system that allows us to load, query, modify, and delete data as we see fit.\n  Bigquery stores data as columns. This has implications for database efficiency and design, but for us, this means that we can reduce costs and potentially increase performance of our queries by limiting those queries to only the columns we need. In other words, instead of SELECT * FROM TABLE, we should focus queries to the columns of interest (SELECT col1, col2 FROM TABLE).\n  Bigquery benefits from denormalization. The implications of #3 lead to a desired schema that includes repeated values rather than splitting those values into separate tables.\n  For some more interesting facts and tips on using Bigquery, see “Twelve Truths about Bigquery”.\nAccessing OmicIDX The Bigquery cloud console The bq command line  ","excerpt":"What makes Bigquery what it is?   Bigquery most closely resembles a [relational database management …","ref":"/omicidx-docs/docs/bigquery/introduction/","title":"Start exploring OmicIDX on the Bigquery web console"},{"body":"Work-in-progress\nJupyter notebooks Several deployable Jupyter Notebooks are available.\n","excerpt":"Work-in-progress\nJupyter notebooks Several deployable Jupyter Notebooks are available.","ref":"/omicidx-docs/docs/examples/","title":"Examples"},{"body":"Contributing OmicIDX is an open source project and we love getting patches and contributions to make the project and its docs even better.\nThe code and documentation live in multiple repositories at the OmicIDX Github organization. The Developer Documentation gives details of the individual repositories, their contents, and role in the OmicIDX ecosystem.\n","excerpt":"Contributing OmicIDX is an open source project and we love getting patches and contributions to make …","ref":"/omicidx-docs/docs/contribution-guidelines/","title":"Contribution Guidelines"},{"body":"RESTful Concepts Before focusing on any jargon or getting hung up on semantics, in the case of the OmicIDX REST API, three components to the system are important.\nThe first is that REST systems are typically composed of resources. Any information that can be named can be a resource: a document or image, a temporal service, a collection of other resources, a non-virtual object (e.g. a person), and so on. In the OmicIDX case, typical resources are things like:\n SRA Runs SRA Studies Biosample Sample records SRA Experiments SRA Samples GEO Platforms GEO Samples GEO Series (studies)  REST uses a resource identifier to “name” the particular resource involved in an interaction. In OmicIDX, these resource identifiers are typically accessions, like SRR000273, SRX000273, or SAMND00000001.\nA REST API accesses resources via http calls. For example, to access a specific SRA study record, one can use a URL like:\nhttps://api.omicidx.cancerdatasci.org/sra/studies/SRP014892\nAccessing the URL from the linux command-line program using a program like curl leads to facile programmatic access. More on programmatic access follows.\nREST is acronym for REpresentational State Transfer. It is architectural style for distributed systems and was first presented by Roy Fielding in 2000 in his famous dissertation.\n  “Tip” When viewing API results in the browser by, for example, clicking on the examples in this documentation, a browser plugin such as the Chrome JSON Viewer can enhance the experience quite significantly.  \nRetrieving records by accession All of the common public omics data repositories include accessions for their records. These accessions serve as keys in OmicIDX, so they can be reused easily for quick lookup of records. When the accession is known (such as when you find the accession in a pubmed abstract), retrieving the metadata for that accession is a common task. OmicIDX uses accessions from the original database, so eee table @ref(tab:tab1) for examples of what to look for.\n (#tab:tab1) This table outlines the resources and the resource identifiers, or accessions, in OmicIDX. Note how the format of the accessions differs across resources. The “type of record” column has multiple Sample entries, for example, but each repository (GEO, SRA, Biosample, etc.) has a unique data model. More details on the data models are in the [SRA], [GEO], and [Biosample] sections.  Database Example accession Type of record    SRA SRP012682 Study  SRA SRS357840 Sample  SRA SRX178456 Experiment  SRA SRR543404 Run  Biosample SAMD00000001 Sample  GEO GSM10 Sample  GEO GSE2553 Study (or Series)  GEO GPL96 Platform    Get an individual record by accession URLs for accessing individual records in OmicIDX follow a standard form and are easy to construct. See Figure @ref(fig:urldiagram) for details.\n(ref:urldiagram) OmicIDX URLs to access omics metadata resources by accession follow a pattern. In the diagramatic representation of an OmicIDX URL, box 1 is the server name. Box 2 is the originating database which is, in this case, the [SRA] database. Box 3 is the name of the resource within the originating database, here the studies collection. Finally, box 4 is the accession. Note that no / follows the accession.\nknitr::include_graphics('url_diagram.png')  (ref:urldiagram) For example, the SRA accession for the GTeX study is SRP012682. This accession comes from the sra database and is a study, so we query the following URL:\n https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682  Clicking on the link will return JSON results for the study record for the GTeX study. Alternatively, one can use curl on the command line to access the same URL.\ncurl -s 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682'  While curl will work fine to get results, the httpie tool is a friendlier tool for querying web APIs. Installation is straightforward.\nhttp 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682' \\ --pretty format ## { ## \u0026quot;BioProject\u0026quot;: \u0026quot;PRJNA75899\u0026quot;, ## \u0026quot;abstract\u0026quot;: \u0026quot;Lay Description. The aim of the Genotype-Tissue Expression (GTEx) Project is to increase our understanding of how changes in our genes affect human health and disease with the ultimate goal of improving health care for future generations. GTEx will create a database that researchers can use to study how inherited changes in genes lead to common diseases. GTEx researchers are studying genes in different tissues obtained from many different people. The GTEx project also includes a study of the GTEx donor consent process - this study will help ensure that the consent process and other aspects of the project effectively address the concerns and expectations of participants in the study. GTEx is a pioneering project that uses state-of-the-art protocols for obtaining and storing a large range of organs and tissues, and for testing them in the lab. Until now, no project has analyzed genetic variation and expression in as many tissues from the same person in... (for more see dbGaP study page.)\u0026quot;, ## \u0026quot;accession\u0026quot;: \u0026quot;SRP012682\u0026quot;, ## \u0026quot;alias\u0026quot;: \u0026quot;phs000424\u0026quot;, ## \u0026quot;attributes\u0026quot;: [ ## { ## \u0026quot;tag\u0026quot;: \u0026quot;parent_bioproject\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;PRJNA75897\u0026quot; ## } ## ], ## \u0026quot;center_name\u0026quot;: \u0026quot;dbGaP\u0026quot;, ## \u0026quot;experiment_count\u0026quot;: \u0026quot;24588\u0026quot;, ## \u0026quot;identifiers\u0026quot;: [ ## { ## \u0026quot;id\u0026quot;: \u0026quot;PRJNA75899\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;BioProject\u0026quot; ## }, ## { ## \u0026quot;id\u0026quot;: \u0026quot;phs000424\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;dbGaP\u0026quot; ## }, ## { ## \u0026quot;id\u0026quot;: \u0026quot;phs000424\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;dbGaP\u0026quot; ## } ## ], ## \u0026quot;insdc\u0026quot;: true, ## \u0026quot;lastupdate\u0026quot;: \u0026quot;2017-09-17T10:26:44\u0026quot;, ## \u0026quot;mean_bases_per_run\u0026quot;: 14030484634.422861, ## \u0026quot;published\u0026quot;: \u0026quot;2014-02-14T22:56:17\u0026quot;, ## \u0026quot;pubmed_ids\u0026quot;: [], ## \u0026quot;received\u0026quot;: \u0026quot;2012-05-04T15:43:05\u0026quot;, ## \u0026quot;run_count\u0026quot;: \u0026quot;24588\u0026quot;, ## \u0026quot;sample_count\u0026quot;: \u0026quot;14249\u0026quot;, ## \u0026quot;status\u0026quot;: \u0026quot;live\u0026quot;, ## \u0026quot;study_type\u0026quot;: \u0026quot;Other\u0026quot;, ## \u0026quot;taxon_ids\u0026quot;: [ ## \u0026quot;9606\u0026quot; ## ], ## \u0026quot;title\u0026quot;: \u0026quot;Genotype-Tissue Expression (GTEx) Common Fund Project\u0026quot;, ## \u0026quot;total_bases\u0026quot;: \u0026quot;343115501734811\u0026quot;, ## \u0026quot;total_spots\u0026quot;: \u0026quot;1698588305124\u0026quot; ## }  The [httr] package is useful in R for accessing web resources. The following is a simple code example.\n# Requires the httr package # install.packages('httr') response = httr::GET(\u0026quot;https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682\u0026quot;) content = httr::content(response) content ## $pubmed_ids ## list() ## ## $total_spots ## [1] \u0026quot;1698588305124\u0026quot; ## ## $identifiers ## $identifiers[[1]] ## $identifiers[[1]]$id ## [1] \u0026quot;PRJNA75899\u0026quot; ## ## $identifiers[[1]]$namespace ## [1] \u0026quot;BioProject\u0026quot; ## ## ## $identifiers[[2]] ## $identifiers[[2]]$id ## [1] \u0026quot;phs000424\u0026quot; ## ## $identifiers[[2]]$namespace ## [1] \u0026quot;dbGaP\u0026quot; ## ## ## $identifiers[[3]] ## $identifiers[[3]]$id ## [1] \u0026quot;phs000424\u0026quot; ## ## $identifiers[[3]]$namespace ## [1] \u0026quot;dbGaP\u0026quot; ## ## ## ## $taxon_ids ## $taxon_ids[[1]] ## [1] \u0026quot;9606\u0026quot; ## ## ## $experiment_count ## [1] \u0026quot;24588\u0026quot; ## ## $received ## [1] \u0026quot;2012-05-04T15:43:05\u0026quot; ## ## $abstract ## [1] \u0026quot;Lay Description. The aim of the Genotype-Tissue Expression (GTEx) Project is to increase our understanding of how changes in our genes affect human health and disease with the ultimate goal of improving health care for future generations. GTEx will create a database that researchers can use to study how inherited changes in genes lead to common diseases. GTEx researchers are studying genes in different tissues obtained from many different people. The GTEx project also includes a study of the GTEx donor consent process - this study will help ensure that the consent process and other aspects of the project effectively address the concerns and expectations of participants in the study. GTEx is a pioneering project that uses state-of-the-art protocols for obtaining and storing a large range of organs and tissues, and for testing them in the lab. Until now, no project has analyzed genetic variation and expression in as many tissues from the same person in... (for more see dbGaP study page.)\u0026quot; ## ## $accession ## [1] \u0026quot;SRP012682\u0026quot; ## ## $published ## [1] \u0026quot;2014-02-14T22:56:17\u0026quot; ## ## $title ## [1] \u0026quot;Genotype-Tissue Expression (GTEx) Common Fund Project\u0026quot; ## ## $mean_bases_per_run ## [1] 14030484634 ## ## $run_count ## [1] \u0026quot;24588\u0026quot; ## ## $center_name ## [1] \u0026quot;dbGaP\u0026quot; ## ## $study_type ## [1] \u0026quot;Other\u0026quot; ## ## $insdc ## [1] TRUE ## ## $sample_count ## [1] \u0026quot;14249\u0026quot; ## ## $alias ## [1] \u0026quot;phs000424\u0026quot; ## ## $attributes ## $attributes[[1]] ## $attributes[[1]]$value ## [1] \u0026quot;PRJNA75897\u0026quot; ## ## $attributes[[1]]$tag ## [1] \u0026quot;parent_bioproject\u0026quot; ## ## ## ## $total_bases ## [1] \u0026quot;343115501734811\u0026quot; ## ## $lastupdate ## [1] \u0026quot;2017-09-17T10:26:44\u0026quot; ## ## $BioProject ## [1] \u0026quot;PRJNA75899\u0026quot; ## ## $status ## [1] \u0026quot;live\u0026quot;  In python, one might use the [requests] library to access the URL and retrieve the data into a python object.\n# requires the requests package be available # pip install requests import requests, pprint response = requests.get( \u0026quot;https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682\u0026quot; ) pprint.pprint(response.json()) ## {'BioProject': 'PRJNA75899', ## 'abstract': 'Lay Description. The aim of the Genotype-Tissue Expression ' ## '(GTEx) Project is to increase our understanding of how changes ' ## 'in our genes affect human health and disease with the ultimate ' ## 'goal of improving health care for future generations. GTEx will ' ## 'create a database that researchers can use to study how ' ## 'inherited changes in genes lead to common diseases. GTEx ' ## 'researchers are studying genes in different tissues obtained ' ## 'from many different people. The GTEx project also includes a ' ## 'study of the GTEx donor consent process - this study will help ' ## 'ensure that the consent process and other aspects of the project ' ## 'effectively address the concerns and expectations of ' ## 'participants in the study. GTEx is a pioneering project that ' ## 'uses state-of-the-art protocols for obtaining and storing a ' ## 'large range of organs and tissues, and for testing them in the ' ## 'lab. Until now, no project has analyzed genetic variation and ' ## 'expression in as many tissues from the same person in... (for ' ## 'more see dbGaP study page.)', ## 'accession': 'SRP012682', ## 'alias': 'phs000424', ## 'attributes': [{'tag': 'parent_bioproject', 'value': 'PRJNA75897'}], ## 'center_name': 'dbGaP', ## 'experiment_count': '24588', ## 'identifiers': [{'id': 'PRJNA75899', 'namespace': 'BioProject'}, ## {'id': 'phs000424', 'namespace': 'dbGaP'}, ## {'id': 'phs000424', 'namespace': 'dbGaP'}], ## 'insdc': True, ## 'lastupdate': '2017-09-17T10:26:44', ## 'mean_bases_per_run': 14030484634.422861, ## 'published': '2014-02-14T22:56:17', ## 'pubmed_ids': [], ## 'received': '2012-05-04T15:43:05', ## 'run_count': '24588', ## 'sample_count': '14249', ## 'status': 'live', ## 'study_type': 'Other', ## 'taxon_ids': ['9606'], ## 'title': 'Genotype-Tissue Expression (GTEx) Common Fund Project', ## 'total_bases': '343115501734811', ## 'total_spots': '1698588305124'}  Each resource (SRA Sample, for example) has a particular data model that is shared across all members of that resource. However, different resources (SRA Sample vs SRA Study) will have different data models (though some fields are common) from one another. To get a sense of what other resources look like, try clicking through these links. For more details, see the data models for [SRA], [GEO], and [Biosample].\nAdditional examples include:\n https://api.omicidx.cancerdatasci.org/sra/samples/SRS357840 https://api.omicidx.cancerdatasci.org/sra/experiments/SRX178456 https://api.omicidx.cancerdatasci.org/sra/runs/SRR543404 https://api.omicidx.cancerdatasci.org/biosample/samples/SAMD00000001  Get records related to an accession Another common task is to find all the records of one type for a record of another type, e.g., all samples for a given study. For this section, we will make the workflow a bit more realistic. Mike Love routinely teaches about gene-level differential RNA-seq expression using the rnaseqGene Bioconductor workflow. After accessing the Bioconductor vignette, we note that the data used are from [@Himes2014-zj].\nTo find SRA links from a PubMed record, look at the Related Information section that will look like Figure @ref(fig:pubmedlinks). Clicking on the SRA link will reveal that thethe related SRA study is SRP033351. Reviewing the single-record access approach from the last section, this URL returns the details of the study.\n https://api.omicidx.cancerdatasci.org/sra/studies/SRP033351  When viewing a PubMed abstract, the Related Information section may have link(s) out to omics databases. Clicking through on one of these links will reveal an accession that can be used for accessing OmicIDX Fetching all related samples given this study (see the [SRA data model section][SRA] for how samples relate to a study) is straightforward and the URL again follows a pattern.\n https://api.omicidx.cancerdatasci.org/sra/studies/SRP033351/samples  The URLs for all related experiment and run records are, respectively:\n https://api.omicidx.cancerdatasci.org/sra/studies/SRP033351/experiments https://api.omicidx.cancerdatasci.org/sra/studies/SRP033351/runs  Here are additional examples of accessing related records:\n https://api.omicidx.cancerdatasci.org/sra/samples/SRS357840/experiments https://api.omicidx.cancerdatasci.org/sra/samples/SRS357840/runs https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/samples https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/experiments https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/runs https://api.omicidx.cancerdatasci.org/sra/samples/SRS357840/experiments https://api.omicidx.cancerdatasci.org/sra/samples/SRS357840/runs  Counting and paging through results API accesses and queries may include many millions of records, but the OmicIDX REST API limits resultsets to batches of size \u0026lt;1000 records in a single call to the API. This section addresses:\n Choosing the number of results, or size, that are returned by each API call. Paging through very large resultsets in chunks using the cursor.  Adjusting the page size Adding a size parameter to the URL above modifies the default resultset size of 10 to be either smaller (down to zero) or larger (up to 999). An example URL including the size parameter looks like:\n https://api.omicidx.cancerdatasci.org/sra/studies/SRP033351/samples?size=2  # curl -s 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP033351/samples?size=2' http 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP033351/samples' \\ size==2 \\ --pretty format ## { ## \u0026quot;cursor\u0026quot;: \u0026quot;X2lkfHxhc2N8fHx8U1JTNTA4NTY4\u0026quot;, ## \u0026quot;hits\u0026quot;: [ ## { ## \u0026quot;BioSample\u0026quot;: \u0026quot;SAMN02422675\u0026quot;, ## \u0026quot;accession\u0026quot;: \u0026quot;SRS508567\u0026quot;, ## \u0026quot;alias\u0026quot;: \u0026quot;GSM1275863\u0026quot;, ## \u0026quot;attributes\u0026quot;: [ ## { ## \u0026quot;tag\u0026quot;: \u0026quot;source_name\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;airway smooth muscle cells\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;treatment\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;Dexamethasone\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;tissue\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;human airway smooth muscle cells\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;ercc_mix\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;-\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;cell line\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;N61311\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;cell type\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;airway smooth muscle cells\u0026quot; ## } ## ], ## \u0026quot;experiment_count\u0026quot;: \u0026quot;1\u0026quot;, ## \u0026quot;identifiers\u0026quot;: [ ## { ## \u0026quot;id\u0026quot;: \u0026quot;SAMN02422675\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;BioSample\u0026quot; ## }, ## { ## \u0026quot;id\u0026quot;: \u0026quot;GSM1275863\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;GEO\u0026quot; ## } ## ], ## \u0026quot;insdc\u0026quot;: true, ## \u0026quot;lastupdate\u0026quot;: \u0026quot;2014-11-07T22:00:54\u0026quot;, ## \u0026quot;mean_bases_per_run\u0026quot;: 2665619082, ## \u0026quot;organism\u0026quot;: \u0026quot;Homo sapiens\u0026quot;, ## \u0026quot;published\u0026quot;: \u0026quot;2014-01-01T05:49:37\u0026quot;, ## \u0026quot;received\u0026quot;: \u0026quot;2013-11-26T21:30:10\u0026quot;, ## \u0026quot;run_count\u0026quot;: \u0026quot;1\u0026quot;, ## \u0026quot;status\u0026quot;: \u0026quot;live\u0026quot;, ## \u0026quot;study\u0026quot;: { ## \u0026quot;BioProject\u0026quot;: \u0026quot;PRJNA229998\u0026quot;, ## \u0026quot;abstract\u0026quot;: \u0026quot;Rationale: Asthma is a chronic inflammatory airway disease. The most common medications used for its treatment are ß2-agonists and glucocorticosteroids, and one of the primary tissues that these drugs target in the treatment of asthma is the airway smooth muscle. We used RNA-Seq to characterize the human airway smooth muscle (HASM) transcriptome at baseline and under three asthma treatment conditions. Methods: The Illumina TruSeq assay was used to prepare 75bp paired-end libraries for HASM cells from four white male donors under four treatment conditions: 1) no treatment; 2) treatment with a ß2-agonist (i.e. Albuterol, 1µM for 18h); 3) treatment with a glucocorticosteroid (i.e. Dexamethasone (Dex), 1µM for 18h); 4) simultaneous treatment with a ß2-agonist and glucocorticoid, and the libraries were sequenced with an Illumina Hi-Seq 2000 instrument. The Tuxedo Suite Tools were used to align reads to the hg19 reference genome, assemble transcripts, and perform differential expression analysis using the protocol described in https://github.com/blancahimes/taffeta Overall design: mRNA profiles obtained via RNA-Seq for four primary human airway smooth muscle cell lines that were treated with dexamethasone, albuterol, dexamethasone+albuterol or were left untreated.\u0026quot;, ## \u0026quot;accession\u0026quot;: \u0026quot;SRP033351\u0026quot;, ## \u0026quot;alias\u0026quot;: \u0026quot;GSE52778\u0026quot;, ## \u0026quot;attributes\u0026quot;: [], ## \u0026quot;center_name\u0026quot;: \u0026quot;GEO\u0026quot;, ## \u0026quot;identifiers\u0026quot;: [ ## { ## \u0026quot;id\u0026quot;: \u0026quot;PRJNA229998\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;BioProject\u0026quot; ## }, ## { ## \u0026quot;id\u0026quot;: \u0026quot;GSE52778\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;GEO\u0026quot; ## } ## ], ## \u0026quot;insdc\u0026quot;: true, ## \u0026quot;lastupdate\u0026quot;: \u0026quot;2018-06-12T17:05:25\u0026quot;, ## \u0026quot;published\u0026quot;: \u0026quot;2014-01-02T14:16:11\u0026quot;, ## \u0026quot;pubmed_ids\u0026quot;: [ ## \u0026quot;24926665\u0026quot; ## ], ## \u0026quot;received\u0026quot;: \u0026quot;2013-11-26T21:29:11\u0026quot;, ## \u0026quot;status\u0026quot;: \u0026quot;live\u0026quot;, ## \u0026quot;study_type\u0026quot;: \u0026quot;Transcriptome Analysis\u0026quot;, ## \u0026quot;title\u0026quot;: \u0026quot;Human Airway Smooth Muscle Transcriptome Changes in Response to Asthma Medications\u0026quot; ## }, ## \u0026quot;taxon_id\u0026quot;: \u0026quot;9606\u0026quot;, ## \u0026quot;title\u0026quot;: \u0026quot;N61311_Dex\u0026quot;, ## \u0026quot;total_bases\u0026quot;: \u0026quot;2665619082\u0026quot;, ## \u0026quot;total_spots\u0026quot;: \u0026quot;21155707\u0026quot;, ## \u0026quot;xrefs\u0026quot;: [ ## { ## \u0026quot;db\u0026quot;: \u0026quot;bioproject\u0026quot;, ## \u0026quot;id\u0026quot;: \u0026quot;229998\u0026quot; ## } ## ] ## }, ## { ## \u0026quot;BioSample\u0026quot;: \u0026quot;SAMN02422669\u0026quot;, ## \u0026quot;accession\u0026quot;: \u0026quot;SRS508568\u0026quot;, ## \u0026quot;alias\u0026quot;: \u0026quot;GSM1275862\u0026quot;, ## \u0026quot;attributes\u0026quot;: [ ## { ## \u0026quot;tag\u0026quot;: \u0026quot;source_name\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;airway smooth muscle cells\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;treatment\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;Untreated\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;tissue\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;human airway smooth muscle cells\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;ercc_mix\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;-\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;cell line\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;N61311\u0026quot; ## }, ## { ## \u0026quot;tag\u0026quot;: \u0026quot;cell type\u0026quot;, ## \u0026quot;value\u0026quot;: \u0026quot;airway smooth muscle cells\u0026quot; ## } ## ], ## \u0026quot;experiment_count\u0026quot;: \u0026quot;1\u0026quot;, ## \u0026quot;identifiers\u0026quot;: [ ## { ## \u0026quot;id\u0026quot;: \u0026quot;SAMN02422669\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;BioSample\u0026quot; ## }, ## { ## \u0026quot;id\u0026quot;: \u0026quot;GSM1275862\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;GEO\u0026quot; ## } ## ], ## \u0026quot;insdc\u0026quot;: true, ## \u0026quot;lastupdate\u0026quot;: \u0026quot;2014-11-07T22:00:54\u0026quot;, ## \u0026quot;mean_bases_per_run\u0026quot;: 2889875646, ## \u0026quot;organism\u0026quot;: \u0026quot;Homo sapiens\u0026quot;, ## \u0026quot;published\u0026quot;: \u0026quot;2014-01-01T05:49:38\u0026quot;, ## \u0026quot;received\u0026quot;: \u0026quot;2013-11-26T21:30:11\u0026quot;, ## \u0026quot;run_count\u0026quot;: \u0026quot;1\u0026quot;, ## \u0026quot;status\u0026quot;: \u0026quot;live\u0026quot;, ## \u0026quot;study\u0026quot;: { ## \u0026quot;BioProject\u0026quot;: \u0026quot;PRJNA229998\u0026quot;, ## \u0026quot;abstract\u0026quot;: \u0026quot;Rationale: Asthma is a chronic inflammatory airway disease. The most common medications used for its treatment are ß2-agonists and glucocorticosteroids, and one of the primary tissues that these drugs target in the treatment of asthma is the airway smooth muscle. We used RNA-Seq to characterize the human airway smooth muscle (HASM) transcriptome at baseline and under three asthma treatment conditions. Methods: The Illumina TruSeq assay was used to prepare 75bp paired-end libraries for HASM cells from four white male donors under four treatment conditions: 1) no treatment; 2) treatment with a ß2-agonist (i.e. Albuterol, 1µM for 18h); 3) treatment with a glucocorticosteroid (i.e. Dexamethasone (Dex), 1µM for 18h); 4) simultaneous treatment with a ß2-agonist and glucocorticoid, and the libraries were sequenced with an Illumina Hi-Seq 2000 instrument. The Tuxedo Suite Tools were used to align reads to the hg19 reference genome, assemble transcripts, and perform differential expression analysis using the protocol described in https://github.com/blancahimes/taffeta Overall design: mRNA profiles obtained via RNA-Seq for four primary human airway smooth muscle cell lines that were treated with dexamethasone, albuterol, dexamethasone+albuterol or were left untreated.\u0026quot;, ## \u0026quot;accession\u0026quot;: \u0026quot;SRP033351\u0026quot;, ## \u0026quot;alias\u0026quot;: \u0026quot;GSE52778\u0026quot;, ## \u0026quot;attributes\u0026quot;: [], ## \u0026quot;center_name\u0026quot;: \u0026quot;GEO\u0026quot;, ## \u0026quot;identifiers\u0026quot;: [ ## { ## \u0026quot;id\u0026quot;: \u0026quot;PRJNA229998\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;BioProject\u0026quot; ## }, ## { ## \u0026quot;id\u0026quot;: \u0026quot;GSE52778\u0026quot;, ## \u0026quot;namespace\u0026quot;: \u0026quot;GEO\u0026quot; ## } ## ], ## \u0026quot;insdc\u0026quot;: true, ## \u0026quot;lastupdate\u0026quot;: \u0026quot;2018-06-12T17:05:25\u0026quot;, ## \u0026quot;published\u0026quot;: \u0026quot;2014-01-02T14:16:11\u0026quot;, ## \u0026quot;pubmed_ids\u0026quot;: [ ## \u0026quot;24926665\u0026quot; ## ], ## \u0026quot;received\u0026quot;: \u0026quot;2013-11-26T21:29:11\u0026quot;, ## \u0026quot;status\u0026quot;: \u0026quot;live\u0026quot;, ## \u0026quot;study_type\u0026quot;: \u0026quot;Transcriptome Analysis\u0026quot;, ## \u0026quot;title\u0026quot;: \u0026quot;Human Airway Smooth Muscle Transcriptome Changes in Response to Asthma Medications\u0026quot; ## }, ## \u0026quot;taxon_id\u0026quot;: \u0026quot;9606\u0026quot;, ## \u0026quot;title\u0026quot;: \u0026quot;N61311_untreated\u0026quot;, ## \u0026quot;total_bases\u0026quot;: \u0026quot;2889875646\u0026quot;, ## \u0026quot;total_spots\u0026quot;: \u0026quot;22935521\u0026quot;, ## \u0026quot;xrefs\u0026quot;: [ ## { ## \u0026quot;db\u0026quot;: \u0026quot;bioproject\u0026quot;, ## \u0026quot;id\u0026quot;: \u0026quot;229998\u0026quot; ## } ## ] ## } ## ], ## \u0026quot;stats\u0026quot;: { ## \u0026quot;took\u0026quot;: 1, ## \u0026quot;total\u0026quot;: 16 ## }, ## \u0026quot;success\u0026quot;: true ## }  Using a size of zero (0) is useful to capture just the count of the number of records.\n# curl -s 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP033351/samples?size=0' http 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP033351/samples' \\ size==0 \\ --pretty format ## { ## \u0026quot;cursor\u0026quot;: null, ## \u0026quot;hits\u0026quot;: [], ## \u0026quot;stats\u0026quot;: { ## \u0026quot;took\u0026quot;: 0, ## \u0026quot;total\u0026quot;: 16 ## }, ## \u0026quot;success\u0026quot;: true ## }  Note that the stats.total part of the output gives the number 16. All data resultsets from the OmicIDX API will include this annotation, giving the total number of results available given the query or URL.\nAnother, larger study, such at GTeX (SRP015892) offers many more samples. But how many?\n# curl -s 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/samples?size=0' http 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/samples' \\ size==0 \\ --pretty format ## { ## \u0026quot;cursor\u0026quot;: null, ## \u0026quot;hits\u0026quot;: [], ## \u0026quot;stats\u0026quot;: { ## \u0026quot;took\u0026quot;: 0, ## \u0026quot;total\u0026quot;: 14249 ## }, ## \u0026quot;success\u0026quot;: true ## }  Therefore, the size parameter varies the number of results returned by an API call. Using a size of zero (0) is a quick-and-dirty approach to get a count of the number of records that would be returned by an API call. This same trick can be used when counting search results below.\nUsing the cursor to page through large result sets. The limitation on result set size is to mitigate problems with network connectivity and to simplify somewhat the database backend infrastructure. However, there are definitely result sets that are larger than 999 records. How do we deal with that situation?\nThe OmicIDX API uses paging. In particular, the API uses cursor-based paging. For each result set that the API returns, if more results are available, there will be a cursor field available that can be used as a parameter to the next API call to start with results after the cursor. Perhaps it is easier to explain with an example:\n# curl -s 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/samples?size=5' http 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/samples' \\ size==5 \\ --pretty format  If you run the line above, the result will include a \u0026quot;cursor\u0026quot;: \u0026quot;LONG....STRING\u0026quot; that might look like the following (your cursor may be different).\n... ], \u0026quot;cursor\u0026quot;: \u0026quot;X2lkfHxhc2N8fHx8U1JTMTAxNzEzNw==\u0026quot;, \u0026quot;stats\u0026quot;: { \u0026quot;total\u0026quot;: 14249, \u0026quot;took\u0026quot;: 10 }, \u0026quot;success\u0026quot;: true } ...  Adding the cursor as a parameter to the same URL retrieves the next 5 results like so:\n# curl -s 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/samples?size=5\u0026amp;cursor=X2lkfHxhc2N8fHx8U1JTMTAxNzEzNw==' http 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/samples' \\ size==5 \\ 'cursor==X2lkfHxhc2N8fHx8U1JTMTAxNzEzNw==' \\ --pretty format  The next cursor value will look similar (for example, “X2lkfHxhc2N8fHx8U1JTMTAxNzE0Mg==”). Continuing to play this game of specifying the cursor when it is available allows paging through the result set. When fetching results, the cursor will be available until there are no more results to be fetched. Thus, when there is not a cursor entry in the results, all results have been retrieved and any looping code can stop.\nNote a few assumptions/caveats here.\n The size parameter dictates the number of results in one “page”. The cursor parameter is specific to the search or API query. Cursors cannot be reused across different queries. When calling the API, the query should remain fixed when paging with a cursor (ie., use the same URL over again, changing only the cursor value). Underlying the cursor functionality is a fixed sorting order (that is not currently a parameter that can be tweeked).  Customizing returned fields Listing available fields # curl -s 'https://api.omicidx.cancerdatasci.org/_mapping/study' http 'https://api.omicidx.cancerdatasci.org/_mapping/study' \\ --pretty format ## [ ## { ## \u0026quot;field\u0026quot;: \u0026quot;BioProject\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;abstract\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;accession\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;alias\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;attributes.tag\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;attributes.value\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;keyword\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;broker_name\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;center_name\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;description\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;experiment_count\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;identifiers.id\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: true, ## \u0026quot;path\u0026quot;: \u0026quot;identifiers\u0026quot;, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;identifiers.namespace\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: true, ## \u0026quot;path\u0026quot;: \u0026quot;identifiers\u0026quot;, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;insdc\u0026quot;, ## \u0026quot;keyword\u0026quot;: false, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;boolean\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;lastupdate\u0026quot;, ## \u0026quot;keyword\u0026quot;: false, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;date\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;mean_bases_per_run\u0026quot;, ## \u0026quot;keyword\u0026quot;: false, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;float\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;published\u0026quot;, ## \u0026quot;keyword\u0026quot;: false, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;date\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;pubmed_ids\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;received\u0026quot;, ## \u0026quot;keyword\u0026quot;: false, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;date\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;run_count\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;sample_count\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;status\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;study_type\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;taxon_ids\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;title\u0026quot;, ## \u0026quot;keyword\u0026quot;: true, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;text\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;total_bases\u0026quot;, ## \u0026quot;keyword\u0026quot;: false, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;long\u0026quot; ## }, ## { ## \u0026quot;field\u0026quot;: \u0026quot;total_spots\u0026quot;, ## \u0026quot;keyword\u0026quot;: false, ## \u0026quot;nested\u0026quot;: false, ## \u0026quot;type\u0026quot;: \u0026quot;long\u0026quot; ## } ## ]  Including or excluding specific fields from results # curl -s 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/samples?size=5\u0026amp;include_fields=accession\u0026amp;include_fields=title' http 'https://api.omicidx.cancerdatasci.org/sra/studies/SRP012682/samples' \\ 'size==5' 'include_fields==accession' \\ 'include_fields==title' \\ --pretty format ## { ## \u0026quot;cursor\u0026quot;: \u0026quot;X2lkfHxhc2N8fHx8U1JTMTAxNzEzNw==\u0026quot;, ## \u0026quot;hits\u0026quot;: [ ## { ## \u0026quot;accession\u0026quot;: \u0026quot;SRS1017133\u0026quot;, ## \u0026quot;title\u0026quot;: \u0026quot;Non-tumor RNA:Total RNA sample from Skin - Sun Exposed (Lower leg) of a human female participant in the dbGaP study \\\u0026quot;Genotype-Tissue Expression (GTEx)\\\u0026quot;\u0026quot; ## }, ## { ## \u0026quot;accession\u0026quot;: \u0026quot;SRS1017134\u0026quot;, ## \u0026quot;title\u0026quot;: \u0026quot;Non-tumor RNA:Total RNA sample from Testis of a human male participant in the dbGaP study \\\u0026quot;Genotype-Tissue Expression (GTEx)\\\u0026quot;\u0026quot; ## }, ## { ## \u0026quot;accession\u0026quot;: \u0026quot;SRS1017135\u0026quot;, ## \u0026quot;title\u0026quot;: \u0026quot;Non-tumor RNA:Total RNA sample from Thyroid of a human male participant in the dbGaP study \\\u0026quot;Genotype-Tissue Expression (GTEx)\\\u0026quot;\u0026quot; ## }, ## { ## \u0026quot;accession\u0026quot;: \u0026quot;SRS1017136\u0026quot;, ## \u0026quot;title\u0026quot;: \u0026quot;Non-tumor RNA:Total RNA sample from Thyroid of a human male participant in the dbGaP study \\\u0026quot;Genotype-Tissue Expression (GTEx)\\\u0026quot;\u0026quot; ## }, ## { ## \u0026quot;accession\u0026quot;: \u0026quot;SRS1017137\u0026quot;, ## \u0026quot;title\u0026quot;: \u0026quot;Non-tumor RNA:Total RNA sample from Stomach of a human male participant in the dbGaP study \\\u0026quot;Genotype-Tissue Expression (GTEx)\\\u0026quot;\u0026quot; ## } ## ], ## \u0026quot;stats\u0026quot;: { ## \u0026quot;took\u0026quot;: 8, ## \u0026quot;total\u0026quot;: 14249 ## }, ## \u0026quot;success\u0026quot;: true ## }  Search  Decide what you want to search for: studies, samples, experiments, or runs. Take a look at the output of one of the API calls on the previous slide for the entity type you want to search for. Look closely at the field names and what is in them. Form the query using lucene query syntax. Form the URL based like so, using q= to specify the query string. For example, to find all human RNA-seq experiments:  https://api.omicidx.cancerdatasci.org/sra/experiments?q=library_strategy:\u0026quot;RNA-Seq\u0026quot; AND sample.taxon_id:9606\nThe number of records can be tuned using size=.... (up to 999 records).\nAggregation and basic analytics ","excerpt":"RESTful Concepts Before focusing on any jargon or getting hung up on semantics, in the case of the …","ref":"/omicidx-docs/docs/open-web-api/rest-api/","title":"Background"},{"body":"Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\nOur Standards Examples of behavior that contributes to a positive environment for our community include:\n Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community  Examples of unacceptable behavior include:\n The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others\u0026rsquo; private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting  Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\nScope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\nEnforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\nEnforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n1. Correction Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n2. Warning Community Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n3. Temporary Ban Community Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n4. Permanent Ban Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the project community.\nAttribution This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.\n","excerpt":"Our Pledge We as members, contributors, and leaders pledge to make participation in our community a …","ref":"/omicidx-docs/community/code_of_conduct/","title":"Contributor Covenant Code of Conduct"},{"body":"","excerpt":"","ref":"/omicidx-docs/docs/bigquery/basic-queries/","title":"Query the OmicIDX Bigquery tables"},{"body":"ID mapping http --pretty format 'https://api.omicidx.cancerdatasci.org/sra/runs' \\ 'size==3' \\ 'include_fields==accession' \\ 'include_fields==experiment.accession' \\ 'include_fields==study.accession' \\ 'include_fields==sample.accession' ## { ## \u0026quot;cursor\u0026quot;: \u0026quot;X2lkfHxhc2N8fHx8RFJSMDAwMDAz\u0026quot;, ## \u0026quot;facets\u0026quot;: [], ## \u0026quot;hits\u0026quot;: [ ## { ## \u0026quot;accession\u0026quot;: \u0026quot;DRR000001\u0026quot;, ## \u0026quot;experiment\u0026quot;: { ## \u0026quot;accession\u0026quot;: \u0026quot;DRX000001\u0026quot; ## }, ## \u0026quot;sample\u0026quot;: { ## \u0026quot;accession\u0026quot;: \u0026quot;DRS000001\u0026quot; ## }, ## \u0026quot;study\u0026quot;: { ## \u0026quot;accession\u0026quot;: \u0026quot;DRP000001\u0026quot; ## } ## }, ## { ## \u0026quot;accession\u0026quot;: \u0026quot;DRR000002\u0026quot;, ## \u0026quot;experiment\u0026quot;: { ## \u0026quot;accession\u0026quot;: \u0026quot;DRX000002\u0026quot; ## }, ## \u0026quot;sample\u0026quot;: { ## \u0026quot;accession\u0026quot;: \u0026quot;DRS000002\u0026quot; ## }, ## \u0026quot;study\u0026quot;: { ## \u0026quot;accession\u0026quot;: \u0026quot;DRP000002\u0026quot; ## } ## }, ## { ## \u0026quot;accession\u0026quot;: \u0026quot;DRR000003\u0026quot;, ## \u0026quot;experiment\u0026quot;: { ## \u0026quot;accession\u0026quot;: \u0026quot;DRX000003\u0026quot; ## }, ## \u0026quot;sample\u0026quot;: { ## \u0026quot;accession\u0026quot;: \u0026quot;DRS000003\u0026quot; ## }, ## \u0026quot;study\u0026quot;: { ## \u0026quot;accession\u0026quot;: \u0026quot;DRP000003\u0026quot; ## } ## } ## ], ## \u0026quot;stats\u0026quot;: { ## \u0026quot;took\u0026quot;: 2313.0, ## \u0026quot;total\u0026quot;: 8811379 ## }, ## \u0026quot;success\u0026quot;: true ## }  Experiment types http --pretty format 'https://api.omicidx.cancerdatasci.org/sra/runs' \\ 'facets==experiment.library_source' \\ 'size==0' \\ 'facet_size=5' ## { ## \u0026quot;detail\u0026quot;: \u0026quot;Method Not Allowed\u0026quot; ## }  ","excerpt":"ID mapping http --pretty format 'https://api.omicidx.cancerdatasci.org/sra/runs' \\ 'size==3' \\ …","ref":"/omicidx-docs/docs/open-web-api/examples/","title":"Extended Examples and Use Cases"},{"body":"","excerpt":"","ref":"/omicidx-docs/docs/bigquery/save-results/","title":"Export data and query results"},{"body":"","excerpt":"","ref":"/omicidx-docs/docs/bigquery/analytics/","title":"Advanced use cases"},{"body":"The OmicIDX project has several components available under the Github omicidx organization. Repositories include:\n Parsers Builder REST API Website and documentation  Parsers URL: https://github.com/omicidx/omicidx-parsers\nThe parsers repository houses parsers that transform omics metadata from their original source formats to JSON. Because repositories have distinct approaches for exposing their metadata, parsers also includes tooling for accessing web APIs or metadata database dumps. The main use case for parsers is to serve as a library for builder. However, it may be useful for others who want to parse omicidx metadata from sratch.\nBuilder URL: https://github.com/omicidx/omicidx-builder\nThe builder repository contains tooling for building from the original source the Bigquery, REST API, and downloadable resources. Most functionality is included in a single executable, omicidx-builder.\nNote: Some features of builder require a Google Bigquery account.\nWebsite and documentation URL: https://github.com/omicidx/omicidx-docs\nThe materials for this website are housed in this repository. The website itself if built using [blogdown] and [hugo].\n[blogdown]: [hugo]:\nREST API Server  https://github.com/omicidx/omicidx-api  Clients GraphQL Server Clients ","excerpt":"The OmicIDX project has several components available under the Github omicidx organization. …","ref":"/omicidx-docs/docs/developer-docs/","title":"Developer documentation"},{"body":" \t window.onload = function() { const ui = SwaggerUIBundle({ url: \"https://api.omicidx.cancerdatasci.org/openapi.json\", dom_id: '#ohpen_swagger_ui', presets: [ SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset ] }) window.ui = ui } \t","excerpt":" \t window.onload = function() { const ui = SwaggerUIBundle({ url: …","ref":"/omicidx-docs/docs/open-web-api/swagger/","title":"OpenAPI interactive documentation"},{"body":"  #td-cover-block-0 { background-image: url(/omicidx-docs/about/featured-background_huecd58d056379c142f106ffb096c7e70a_221334_960x540_fill_q75_catmullrom_smart1.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/omicidx-docs/about/featured-background_huecd58d056379c142f106ffb096c7e70a_221334_1920x1080_fill_q75_catmullrom_smart1.jpg); } }  About OmicIDX The OmicIDX is an ecosystem that treats omics metadata as data. We collect metadata from omics repositories, process it into computable forms, and make it available for search, analysis, bulk processing, and for integration with additional data resources.\nRead on to find out more, or visit our documentation to get started!\n       What does OmicIDX provide? There are a number of websites and projects that focus on omics metadata search. The OmicIDX project can be used for enhanced search (see Bigquery and Web API documentation), but an additional and key goal is to provide omics metadata in forms that enable data science. Natural language processing, bulk data mining, mapping to ontologies, or enrichment through linked data approaches are all applications we aim to enable.\nOmicIDX data resources are updated monthly or more frequently (depending on data source). In practice, we access, parse, and organize disparate omics metadata into JSON format and provide the results as:\n Downloadable files, suitable for bulk processing with R, python, or even to load to relational or NoSQL databases. Bigquery tables, ideal for performant data mining and for \u0026ldquo;joining\u0026rdquo; to other public or private datasets. A high performance web application programming interface (API), for language-agnostic search, querying, and data mining.  We develop all code to accomplish these tasks in the open. Contributions and reuse are welcome and encouraged!\n    We do the dirty work of omics data collection so you don't have to. We deal with some of the nitty-gritty details of collecting and consolidating omics metadata, reducing bottlenecks and clearing hurdles. Omics metadata stored by the repository are not always convenient to access in bulk. For example, NCBI GEO metadata are not available as a single \u0026ldquo;dump\u0026rdquo; file, necessitating a \u0026ldquo;crawl\u0026rdquo; of the site to get all available metadata. A wholistic view of a single resource, such as a biological sample, may require metadata from multiple repositories. In many cases, metadata from a single sample may be non-duplicative across repositories. Even when bulk \u0026ldquo;dumps\u0026rdquo; of metadata are available, such resources may be incomplete with respect to the information available from other sources, such as SRA metadata dumps. Gathering complete publicly available metadata requires additional work.     What's next for OmicIDX? Visit our Github project to see what we're currently working on. If there's something you'd like to see in OmicIDX, please create an issue yourself - or assign yourself an issue if you'd like to fix or add something! See our contribution guidelines for more information.    ","excerpt":"#td-cover-block-0 { background-image: …","ref":"/omicidx-docs/about/","title":"About the OmicIDX"},{"body":"See code of conduct\n","excerpt":"See code of conduct","ref":"/omicidx-docs/community/","title":"Community"},{"body":"Welcome ","excerpt":"Welcome ","ref":"/omicidx-docs/docs/","title":"Welcome to OmicIDX"},{"body":"  #td-cover-block-0 { background-image: url(/omicidx-docs/featured-background_hu3d03a01dcc18bc5be0e67db3d8d209a6_1220447_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/omicidx-docs/featured-background_hu3d03a01dcc18bc5be0e67db3d8d209a6_1220447_1920x1080_fill_q75_catmullrom_top.jpg); } }  OmicIDX Learn More   Code   Omics metadata for query, \n       The OmicIDX is an evolving data ecosystem that treats omics metadata as data.       See OmicIDX in action! Launch Jupyter notebooks to work with OmicIDX data.\nRead more …\n   Contributions welcome! We're always looking for new ideas and happy to discuss and accept pull requests and issues on GitHub.\nRead more …\n   Follow us on Twitter! Find out about new features, OmicIDX news, the evolving OmicIDX data ecosystem.\nRead more …\n    ","excerpt":"#td-cover-block-0 { background-image: …","ref":"/omicidx-docs/","title":"OmicIDX"},{"body":"","excerpt":"","ref":"/omicidx-docs/search/","title":"Search Results"}]